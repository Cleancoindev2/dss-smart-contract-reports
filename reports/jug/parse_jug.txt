├─ type: SourceUnit
└─ children
   ├─ 0
   │  ├─ type: PragmaDirective
   │  ├─ name: solidity
   │  └─ value: >=0.5.0
   ├─ 1
   │  ├─ type: PragmaDirective
   │  ├─ name: experimental
   │  └─ value: ABIEncoderV2
   ├─ 2
   │  ├─ type: ImportDirective
   │  ├─ path: ./lib.sol
   │  ├─ unitAlias
   │  └─ symbolAliases
   ├─ 3
   │  ├─ type: ContractDefinition
   │  ├─ name: VatLike
   │  ├─ baseContracts
   │  ├─ subNodes
   │  │  ├─ 0
   │  │  │  ├─ type: StructDefinition
   │  │  │  ├─ name: Ilk
   │  │  │  └─ members
   │  │  │     ├─ 0
   │  │  │     │  ├─ type: VariableDeclaration
   │  │  │     │  ├─ typeName
   │  │  │     │  │  ├─ type: ElementaryTypeName
   │  │  │     │  │  └─ name: uint256
   │  │  │     │  ├─ name: Art
   │  │  │     │  ├─ storageLocation
   │  │  │     │  ├─ isStateVar: false
   │  │  │     │  └─ isIndexed: false
   │  │  │     └─ 1
   │  │  │        ├─ type: VariableDeclaration
   │  │  │        ├─ typeName
   │  │  │        │  ├─ type: ElementaryTypeName
   │  │  │        │  └─ name: uint256
   │  │  │        ├─ name: rate
   │  │  │        ├─ storageLocation
   │  │  │        ├─ isStateVar: false
   │  │  │        └─ isIndexed: false
   │  │  ├─ 1
   │  │  │  ├─ type: FunctionDefinition
   │  │  │  ├─ name: ilks
   │  │  │  ├─ parameters
   │  │  │  │  ├─ type: ParameterList
   │  │  │  │  └─ parameters
   │  │  │  │     └─ 0
   │  │  │  │        ├─ type: Parameter
   │  │  │  │        ├─ typeName
   │  │  │  │        │  ├─ type: ElementaryTypeName
   │  │  │  │        │  └─ name: bytes32
   │  │  │  │        ├─ name
   │  │  │  │        ├─ storageLocation
   │  │  │  │        ├─ isStateVar: false
   │  │  │  │        └─ isIndexed: false
   │  │  │  ├─ returnParameters
   │  │  │  │  ├─ type: ParameterList
   │  │  │  │  └─ parameters
   │  │  │  │     └─ 0
   │  │  │  │        ├─ type: Parameter
   │  │  │  │        ├─ typeName
   │  │  │  │        │  ├─ type: UserDefinedTypeName
   │  │  │  │        │  └─ namePath: Ilk
   │  │  │  │        ├─ name
   │  │  │  │        ├─ storageLocation: memory
   │  │  │  │        ├─ isStateVar: false
   │  │  │  │        └─ isIndexed: false
   │  │  │  ├─ body
   │  │  │  ├─ visibility: public
   │  │  │  ├─ modifiers
   │  │  │  ├─ isConstructor: false
   │  │  │  └─ stateMutability
   │  │  └─ 2
   │  │     ├─ type: FunctionDefinition
   │  │     ├─ name: fold
   │  │     ├─ parameters
   │  │     │  ├─ type: ParameterList
   │  │     │  └─ parameters
   │  │     │     ├─ 0
   │  │     │     │  ├─ type: Parameter
   │  │     │     │  ├─ typeName
   │  │     │     │  │  ├─ type: ElementaryTypeName
   │  │     │     │  │  └─ name: bytes32
   │  │     │     │  ├─ name
   │  │     │     │  ├─ storageLocation
   │  │     │     │  ├─ isStateVar: false
   │  │     │     │  └─ isIndexed: false
   │  │     │     ├─ 1
   │  │     │     │  ├─ type: Parameter
   │  │     │     │  ├─ typeName
   │  │     │     │  │  ├─ type: ElementaryTypeName
   │  │     │     │  │  └─ name: address
   │  │     │     │  ├─ name
   │  │     │     │  ├─ storageLocation
   │  │     │     │  ├─ isStateVar: false
   │  │     │     │  └─ isIndexed: false
   │  │     │     └─ 2
   │  │     │        ├─ type: Parameter
   │  │     │        ├─ typeName
   │  │     │        │  ├─ type: ElementaryTypeName
   │  │     │        │  └─ name: int
   │  │     │        ├─ name
   │  │     │        ├─ storageLocation
   │  │     │        ├─ isStateVar: false
   │  │     │        └─ isIndexed: false
   │  │     ├─ returnParameters
   │  │     ├─ body
   │  │     ├─ visibility: public
   │  │     ├─ modifiers
   │  │     ├─ isConstructor: false
   │  │     └─ stateMutability
   │  └─ kind: contract
   └─ 4
      ├─ type: ContractDefinition
      ├─ name: Jug
      ├─ baseContracts
      │  └─ 0
      │     ├─ type: InheritanceSpecifier
      │     ├─ baseName
      │     │  ├─ type: UserDefinedTypeName
      │     │  └─ namePath: DSNote
      │     └─ arguments
      ├─ subNodes
      │  ├─ 0
      │  │  ├─ type: StateVariableDeclaration
      │  │  ├─ variables
      │  │  │  └─ 0
      │  │  │     ├─ type: VariableDeclaration
      │  │  │     ├─ typeName
      │  │  │     │  ├─ type: Mapping
      │  │  │     │  ├─ keyType
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: address
      │  │  │     │  └─ valueType
      │  │  │     │     ├─ type: ElementaryTypeName
      │  │  │     │     └─ name: uint
      │  │  │     ├─ name: wards
      │  │  │     ├─ expression
      │  │  │     ├─ visibility: public
      │  │  │     ├─ isStateVar: true
      │  │  │     ├─ isDeclaredConst: false
      │  │  │     └─ isIndexed: false
      │  │  └─ initialValue
      │  ├─ 1
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: rely
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: address
      │  │  │        ├─ name: usr
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     └─ 0
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: BinaryOperation
      │  │  │           ├─ operator: =
      │  │  │           ├─ left
      │  │  │           │  ├─ type: IndexAccess
      │  │  │           │  ├─ base
      │  │  │           │  │  ├─ type: Identifier
      │  │  │           │  │  └─ name: wards
      │  │  │           │  └─ index
      │  │  │           │     ├─ type: Identifier
      │  │  │           │     └─ name: usr
      │  │  │           └─ right
      │  │  │              ├─ type: NumberLiteral
      │  │  │              ├─ number: 1
      │  │  │              └─ subdenomination
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  │  ├─ 0
      │  │  │  │  ├─ type: ModifierInvocation
      │  │  │  │  ├─ name: note
      │  │  │  │  └─ arguments
      │  │  │  └─ 1
      │  │  │     ├─ type: ModifierInvocation
      │  │  │     ├─ name: auth
      │  │  │     └─ arguments
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability
      │  ├─ 2
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: deny
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: address
      │  │  │        ├─ name: usr
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     └─ 0
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: BinaryOperation
      │  │  │           ├─ operator: =
      │  │  │           ├─ left
      │  │  │           │  ├─ type: IndexAccess
      │  │  │           │  ├─ base
      │  │  │           │  │  ├─ type: Identifier
      │  │  │           │  │  └─ name: wards
      │  │  │           │  └─ index
      │  │  │           │     ├─ type: Identifier
      │  │  │           │     └─ name: usr
      │  │  │           └─ right
      │  │  │              ├─ type: NumberLiteral
      │  │  │              ├─ number: 0
      │  │  │              └─ subdenomination
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  │  ├─ 0
      │  │  │  │  ├─ type: ModifierInvocation
      │  │  │  │  ├─ name: note
      │  │  │  │  └─ arguments
      │  │  │  └─ 1
      │  │  │     ├─ type: ModifierInvocation
      │  │  │     ├─ name: auth
      │  │  │     └─ arguments
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability
      │  ├─ 3
      │  │  ├─ type: ModifierDefinition
      │  │  ├─ name: auth
      │  │  ├─ parameters
      │  │  └─ body
      │  │     ├─ type: Block
      │  │     └─ statements
      │  │        ├─ 0
      │  │        │  ├─ type: ExpressionStatement
      │  │        │  └─ expression
      │  │        │     ├─ type: FunctionCall
      │  │        │     ├─ expression
      │  │        │     │  ├─ type: Identifier
      │  │        │     │  └─ name: require
      │  │        │     ├─ arguments
      │  │        │     │  └─ 0
      │  │        │     │     ├─ type: BinaryOperation
      │  │        │     │     ├─ operator: ==
      │  │        │     │     ├─ left
      │  │        │     │     │  ├─ type: IndexAccess
      │  │        │     │     │  ├─ base
      │  │        │     │     │  │  ├─ type: Identifier
      │  │        │     │     │  │  └─ name: wards
      │  │        │     │     │  └─ index
      │  │        │     │     │     ├─ type: MemberAccess
      │  │        │     │     │     ├─ expression
      │  │        │     │     │     │  ├─ type: Identifier
      │  │        │     │     │     │  └─ name: msg
      │  │        │     │     │     └─ memberName: sender
      │  │        │     │     └─ right
      │  │        │     │        ├─ type: NumberLiteral
      │  │        │     │        ├─ number: 1
      │  │        │     │        └─ subdenomination
      │  │        │     └─ names
      │  │        └─ 1
      │  │           ├─ type: ExpressionStatement
      │  │           └─ expression
      │  │              ├─ type: Identifier
      │  │              └─ name: _
      │  ├─ 4
      │  │  ├─ type: StructDefinition
      │  │  ├─ name: Ilk
      │  │  └─ members
      │  │     ├─ 0
      │  │     │  ├─ type: VariableDeclaration
      │  │     │  ├─ typeName
      │  │     │  │  ├─ type: ElementaryTypeName
      │  │     │  │  └─ name: uint256
      │  │     │  ├─ name: duty
      │  │     │  ├─ storageLocation
      │  │     │  ├─ isStateVar: false
      │  │     │  └─ isIndexed: false
      │  │     └─ 1
      │  │        ├─ type: VariableDeclaration
      │  │        ├─ typeName
      │  │        │  ├─ type: ElementaryTypeName
      │  │        │  └─ name: uint256
      │  │        ├─ name: rho
      │  │        ├─ storageLocation
      │  │        ├─ isStateVar: false
      │  │        └─ isIndexed: false
      │  ├─ 5
      │  │  ├─ type: StateVariableDeclaration
      │  │  ├─ variables
      │  │  │  └─ 0
      │  │  │     ├─ type: VariableDeclaration
      │  │  │     ├─ typeName
      │  │  │     │  ├─ type: Mapping
      │  │  │     │  ├─ keyType
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: bytes32
      │  │  │     │  └─ valueType
      │  │  │     │     ├─ type: UserDefinedTypeName
      │  │  │     │     └─ namePath: Ilk
      │  │  │     ├─ name: ilks
      │  │  │     ├─ expression
      │  │  │     ├─ visibility: public
      │  │  │     ├─ isStateVar: true
      │  │  │     ├─ isDeclaredConst: false
      │  │  │     └─ isIndexed: false
      │  │  └─ initialValue
      │  ├─ 6
      │  │  ├─ type: StateVariableDeclaration
      │  │  ├─ variables
      │  │  │  └─ 0
      │  │  │     ├─ type: VariableDeclaration
      │  │  │     ├─ typeName
      │  │  │     │  ├─ type: UserDefinedTypeName
      │  │  │     │  └─ namePath: VatLike
      │  │  │     ├─ name: vat
      │  │  │     ├─ expression
      │  │  │     ├─ visibility: public
      │  │  │     ├─ isStateVar: true
      │  │  │     ├─ isDeclaredConst: false
      │  │  │     └─ isIndexed: false
      │  │  └─ initialValue
      │  ├─ 7
      │  │  ├─ type: StateVariableDeclaration
      │  │  ├─ variables
      │  │  │  └─ 0
      │  │  │     ├─ type: VariableDeclaration
      │  │  │     ├─ typeName
      │  │  │     │  ├─ type: ElementaryTypeName
      │  │  │     │  └─ name: address
      │  │  │     ├─ name: vow
      │  │  │     ├─ expression
      │  │  │     ├─ visibility: public
      │  │  │     ├─ isStateVar: true
      │  │  │     ├─ isDeclaredConst: false
      │  │  │     └─ isIndexed: false
      │  │  └─ initialValue
      │  ├─ 8
      │  │  ├─ type: StateVariableDeclaration
      │  │  ├─ variables
      │  │  │  └─ 0
      │  │  │     ├─ type: VariableDeclaration
      │  │  │     ├─ typeName
      │  │  │     │  ├─ type: ElementaryTypeName
      │  │  │     │  └─ name: uint256
      │  │  │     ├─ name: base
      │  │  │     ├─ expression
      │  │  │     ├─ visibility: public
      │  │  │     ├─ isStateVar: true
      │  │  │     ├─ isDeclaredConst: false
      │  │  │     └─ isIndexed: false
      │  │  └─ initialValue
      │  ├─ 9
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: address
      │  │  │        ├─ name: vat_
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: BinaryOperation
      │  │  │     │     ├─ operator: =
      │  │  │     │     ├─ left
      │  │  │     │     │  ├─ type: IndexAccess
      │  │  │     │     │  ├─ base
      │  │  │     │     │  │  ├─ type: Identifier
      │  │  │     │     │  │  └─ name: wards
      │  │  │     │     │  └─ index
      │  │  │     │     │     ├─ type: MemberAccess
      │  │  │     │     │     ├─ expression
      │  │  │     │     │     │  ├─ type: Identifier
      │  │  │     │     │     │  └─ name: msg
      │  │  │     │     │     └─ memberName: sender
      │  │  │     │     └─ right
      │  │  │     │        ├─ type: NumberLiteral
      │  │  │     │        ├─ number: 1
      │  │  │     │        └─ subdenomination
      │  │  │     └─ 1
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: BinaryOperation
      │  │  │           ├─ operator: =
      │  │  │           ├─ left
      │  │  │           │  ├─ type: Identifier
      │  │  │           │  └─ name: vat
      │  │  │           └─ right
      │  │  │              ├─ type: FunctionCall
      │  │  │              ├─ expression
      │  │  │              │  ├─ type: Identifier
      │  │  │              │  └─ name: VatLike
      │  │  │              ├─ arguments
      │  │  │              │  └─ 0
      │  │  │              │     ├─ type: Identifier
      │  │  │              │     └─ name: vat_
      │  │  │              └─ names
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  ├─ isConstructor: true
      │  │  └─ stateMutability
      │  ├─ 10
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: rpow
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: uint
      │  │  │     │  ├─ name: x
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     ├─ 1
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: uint
      │  │  │     │  ├─ name: n
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 2
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: b
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: z
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     └─ 0
      │  │  │        ├─ type: InlineAssemblyStatement
      │  │  │        ├─ language
      │  │  │        └─ body
      │  │  │           ├─ type: AssemblyBlock
      │  │  │           └─ operations
      │  │  │              └─ 0
      │  │  │                 ├─ type: AssemblySwitch
      │  │  │                 ├─ expression
      │  │  │                 │  ├─ type: AssemblyCall
      │  │  │                 │  ├─ functionName: x
      │  │  │                 │  └─ arguments
      │  │  │                 └─ cases
      │  │  │                    ├─ 0
      │  │  │                    │  ├─ type: AssemblyCase
      │  │  │                    │  ├─ block
      │  │  │                    │  │  ├─ type: AssemblyBlock
      │  │  │                    │  │  └─ operations
      │  │  │                    │  │     └─ 0
      │  │  │                    │  │        ├─ type: AssemblySwitch
      │  │  │                    │  │        ├─ expression
      │  │  │                    │  │        │  ├─ type: AssemblyCall
      │  │  │                    │  │        │  ├─ functionName: n
      │  │  │                    │  │        │  └─ arguments
      │  │  │                    │  │        └─ cases
      │  │  │                    │  │           ├─ 0
      │  │  │                    │  │           │  ├─ type: AssemblyCase
      │  │  │                    │  │           │  ├─ block
      │  │  │                    │  │           │  │  ├─ type: AssemblyBlock
      │  │  │                    │  │           │  │  └─ operations
      │  │  │                    │  │           │  │     └─ 0
      │  │  │                    │  │           │  │        ├─ type: AssemblyAssignment
      │  │  │                    │  │           │  │        ├─ names
      │  │  │                    │  │           │  │        │  └─ 0
      │  │  │                    │  │           │  │        │     ├─ type: Identifier
      │  │  │                    │  │           │  │        │     └─ name: z
      │  │  │                    │  │           │  │        └─ expression
      │  │  │                    │  │           │  │           ├─ type: AssemblyCall
      │  │  │                    │  │           │  │           ├─ functionName: b
      │  │  │                    │  │           │  │           └─ arguments
      │  │  │                    │  │           │  └─ value
      │  │  │                    │  │           │     ├─ type: DecimalNumber
      │  │  │                    │  │           │     └─ value: 0
      │  │  │                    │  │           └─ 1
      │  │  │                    │  │              ├─ type: AssemblyCase
      │  │  │                    │  │              ├─ block
      │  │  │                    │  │              │  ├─ type: AssemblyBlock
      │  │  │                    │  │              │  └─ operations
      │  │  │                    │  │              │     └─ 0
      │  │  │                    │  │              │        ├─ type: AssemblyAssignment
      │  │  │                    │  │              │        ├─ names
      │  │  │                    │  │              │        │  └─ 0
      │  │  │                    │  │              │        │     ├─ type: Identifier
      │  │  │                    │  │              │        │     └─ name: z
      │  │  │                    │  │              │        └─ expression
      │  │  │                    │  │              │           ├─ type: DecimalNumber
      │  │  │                    │  │              │           └─ value: 0
      │  │  │                    │  │              └─ default: true
      │  │  │                    │  └─ value
      │  │  │                    │     ├─ type: DecimalNumber
      │  │  │                    │     └─ value: 0
      │  │  │                    └─ 1
      │  │  │                       ├─ type: AssemblyCase
      │  │  │                       ├─ block
      │  │  │                       │  ├─ type: AssemblyBlock
      │  │  │                       │  └─ operations
      │  │  │                       │     ├─ 0
      │  │  │                       │     │  ├─ type: AssemblySwitch
      │  │  │                       │     │  ├─ expression
      │  │  │                       │     │  │  ├─ type: AssemblyCall
      │  │  │                       │     │  │  ├─ functionName: mod
      │  │  │                       │     │  │  └─ arguments
      │  │  │                       │     │  │     ├─ 0
      │  │  │                       │     │  │     │  ├─ type: AssemblyCall
      │  │  │                       │     │  │     │  ├─ functionName: n
      │  │  │                       │     │  │     │  └─ arguments
      │  │  │                       │     │  │     └─ 1
      │  │  │                       │     │  │        ├─ type: DecimalNumber
      │  │  │                       │     │  │        └─ value: 2
      │  │  │                       │     │  └─ cases
      │  │  │                       │     │     ├─ 0
      │  │  │                       │     │     │  ├─ type: AssemblyCase
      │  │  │                       │     │     │  ├─ block
      │  │  │                       │     │     │  │  ├─ type: AssemblyBlock
      │  │  │                       │     │     │  │  └─ operations
      │  │  │                       │     │     │  │     └─ 0
      │  │  │                       │     │     │  │        ├─ type: AssemblyAssignment
      │  │  │                       │     │     │  │        ├─ names
      │  │  │                       │     │     │  │        │  └─ 0
      │  │  │                       │     │     │  │        │     ├─ type: Identifier
      │  │  │                       │     │     │  │        │     └─ name: z
      │  │  │                       │     │     │  │        └─ expression
      │  │  │                       │     │     │  │           ├─ type: AssemblyCall
      │  │  │                       │     │     │  │           ├─ functionName: b
      │  │  │                       │     │     │  │           └─ arguments
      │  │  │                       │     │     │  └─ value
      │  │  │                       │     │     │     ├─ type: DecimalNumber
      │  │  │                       │     │     │     └─ value: 0
      │  │  │                       │     │     └─ 1
      │  │  │                       │     │        ├─ type: AssemblyCase
      │  │  │                       │     │        ├─ block
      │  │  │                       │     │        │  ├─ type: AssemblyBlock
      │  │  │                       │     │        │  └─ operations
      │  │  │                       │     │        │     └─ 0
      │  │  │                       │     │        │        ├─ type: AssemblyAssignment
      │  │  │                       │     │        │        ├─ names
      │  │  │                       │     │        │        │  └─ 0
      │  │  │                       │     │        │        │     ├─ type: Identifier
      │  │  │                       │     │        │        │     └─ name: z
      │  │  │                       │     │        │        └─ expression
      │  │  │                       │     │        │           ├─ type: AssemblyCall
      │  │  │                       │     │        │           ├─ functionName: x
      │  │  │                       │     │        │           └─ arguments
      │  │  │                       │     │        └─ default: true
      │  │  │                       │     ├─ 1
      │  │  │                       │     │  ├─ type: AssemblyLocalDefinition
      │  │  │                       │     │  ├─ names
      │  │  │                       │     │  │  └─ 0
      │  │  │                       │     │  │     ├─ type: Identifier
      │  │  │                       │     │  │     └─ name: half
      │  │  │                       │     │  └─ expression
      │  │  │                       │     │     ├─ type: AssemblyCall
      │  │  │                       │     │     ├─ functionName: div
      │  │  │                       │     │     └─ arguments
      │  │  │                       │     │        ├─ 0
      │  │  │                       │     │        │  ├─ type: AssemblyCall
      │  │  │                       │     │        │  ├─ functionName: b
      │  │  │                       │     │        │  └─ arguments
      │  │  │                       │     │        └─ 1
      │  │  │                       │     │           ├─ type: DecimalNumber
      │  │  │                       │     │           └─ value: 2
      │  │  │                       │     └─ 2
      │  │  │                       │        ├─ type: AssemblyFor
      │  │  │                       │        ├─ pre
      │  │  │                       │        │  ├─ type: AssemblyBlock
      │  │  │                       │        │  └─ operations
      │  │  │                       │        │     └─ 0
      │  │  │                       │        │        ├─ type: AssemblyAssignment
      │  │  │                       │        │        ├─ names
      │  │  │                       │        │        │  └─ 0
      │  │  │                       │        │        │     ├─ type: Identifier
      │  │  │                       │        │        │     └─ name: n
      │  │  │                       │        │        └─ expression
      │  │  │                       │        │           ├─ type: AssemblyCall
      │  │  │                       │        │           ├─ functionName: div
      │  │  │                       │        │           └─ arguments
      │  │  │                       │        │              ├─ 0
      │  │  │                       │        │              │  ├─ type: AssemblyCall
      │  │  │                       │        │              │  ├─ functionName: n
      │  │  │                       │        │              │  └─ arguments
      │  │  │                       │        │              └─ 1
      │  │  │                       │        │                 ├─ type: DecimalNumber
      │  │  │                       │        │                 └─ value: 2
      │  │  │                       │        ├─ condition
      │  │  │                       │        │  ├─ type: AssemblyCall
      │  │  │                       │        │  ├─ functionName: n
      │  │  │                       │        │  └─ arguments
      │  │  │                       │        ├─ post
      │  │  │                       │        │  ├─ type: AssemblyBlock
      │  │  │                       │        │  └─ operations
      │  │  │                       │        │     └─ 0
      │  │  │                       │        │        ├─ type: AssemblyAssignment
      │  │  │                       │        │        ├─ names
      │  │  │                       │        │        │  └─ 0
      │  │  │                       │        │        │     ├─ type: Identifier
      │  │  │                       │        │        │     └─ name: n
      │  │  │                       │        │        └─ expression
      │  │  │                       │        │           ├─ type: AssemblyCall
      │  │  │                       │        │           ├─ functionName: div
      │  │  │                       │        │           └─ arguments
      │  │  │                       │        │              ├─ 0
      │  │  │                       │        │              │  ├─ type: AssemblyCall
      │  │  │                       │        │              │  ├─ functionName: n
      │  │  │                       │        │              │  └─ arguments
      │  │  │                       │        │              └─ 1
      │  │  │                       │        │                 ├─ type: DecimalNumber
      │  │  │                       │        │                 └─ value: 2
      │  │  │                       │        └─ body
      │  │  │                       │           ├─ type: AssemblyBlock
      │  │  │                       │           └─ operations
      │  │  │                       │              ├─ 0
      │  │  │                       │              │  ├─ type: AssemblyLocalDefinition
      │  │  │                       │              │  ├─ names
      │  │  │                       │              │  │  └─ 0
      │  │  │                       │              │  │     ├─ type: Identifier
      │  │  │                       │              │  │     └─ name: xx
      │  │  │                       │              │  └─ expression
      │  │  │                       │              │     ├─ type: AssemblyCall
      │  │  │                       │              │     ├─ functionName: mul
      │  │  │                       │              │     └─ arguments
      │  │  │                       │              │        ├─ 0
      │  │  │                       │              │        │  ├─ type: AssemblyCall
      │  │  │                       │              │        │  ├─ functionName: x
      │  │  │                       │              │        │  └─ arguments
      │  │  │                       │              │        └─ 1
      │  │  │                       │              │           ├─ type: AssemblyCall
      │  │  │                       │              │           ├─ functionName: x
      │  │  │                       │              │           └─ arguments
      │  │  │                       │              ├─ 1
      │  │  │                       │              │  ├─ type: AssemblyIf
      │  │  │                       │              │  ├─ condition
      │  │  │                       │              │  │  ├─ type: AssemblyCall
      │  │  │                       │              │  │  ├─ functionName: iszero
      │  │  │                       │              │  │  └─ arguments
      │  │  │                       │              │  │     └─ 0
      │  │  │                       │              │  │        ├─ type: AssemblyCall
      │  │  │                       │              │  │        ├─ functionName: eq
      │  │  │                       │              │  │        └─ arguments
      │  │  │                       │              │  │           ├─ 0
      │  │  │                       │              │  │           │  ├─ type: AssemblyCall
      │  │  │                       │              │  │           │  ├─ functionName: div
      │  │  │                       │              │  │           │  └─ arguments
      │  │  │                       │              │  │           │     ├─ 0
      │  │  │                       │              │  │           │     │  ├─ type: AssemblyCall
      │  │  │                       │              │  │           │     │  ├─ functionName: xx
      │  │  │                       │              │  │           │     │  └─ arguments
      │  │  │                       │              │  │           │     └─ 1
      │  │  │                       │              │  │           │        ├─ type: AssemblyCall
      │  │  │                       │              │  │           │        ├─ functionName: x
      │  │  │                       │              │  │           │        └─ arguments
      │  │  │                       │              │  │           └─ 1
      │  │  │                       │              │  │              ├─ type: AssemblyCall
      │  │  │                       │              │  │              ├─ functionName: x
      │  │  │                       │              │  │              └─ arguments
      │  │  │                       │              │  └─ body
      │  │  │                       │              │     ├─ type: AssemblyBlock
      │  │  │                       │              │     └─ operations
      │  │  │                       │              │        └─ 0
      │  │  │                       │              │           ├─ type: AssemblyCall
      │  │  │                       │              │           ├─ functionName: revert
      │  │  │                       │              │           └─ arguments
      │  │  │                       │              │              ├─ 0
      │  │  │                       │              │              │  ├─ type: DecimalNumber
      │  │  │                       │              │              │  └─ value: 0
      │  │  │                       │              │              └─ 1
      │  │  │                       │              │                 ├─ type: DecimalNumber
      │  │  │                       │              │                 └─ value: 0
      │  │  │                       │              ├─ 2
      │  │  │                       │              │  ├─ type: AssemblyLocalDefinition
      │  │  │                       │              │  ├─ names
      │  │  │                       │              │  │  └─ 0
      │  │  │                       │              │  │     ├─ type: Identifier
      │  │  │                       │              │  │     └─ name: xxRound
      │  │  │                       │              │  └─ expression
      │  │  │                       │              │     ├─ type: AssemblyCall
      │  │  │                       │              │     ├─ functionName: add
      │  │  │                       │              │     └─ arguments
      │  │  │                       │              │        ├─ 0
      │  │  │                       │              │        │  ├─ type: AssemblyCall
      │  │  │                       │              │        │  ├─ functionName: xx
      │  │  │                       │              │        │  └─ arguments
      │  │  │                       │              │        └─ 1
      │  │  │                       │              │           ├─ type: AssemblyCall
      │  │  │                       │              │           ├─ functionName: half
      │  │  │                       │              │           └─ arguments
      │  │  │                       │              ├─ 3
      │  │  │                       │              │  ├─ type: AssemblyIf
      │  │  │                       │              │  ├─ condition
      │  │  │                       │              │  │  ├─ type: AssemblyCall
      │  │  │                       │              │  │  ├─ functionName: lt
      │  │  │                       │              │  │  └─ arguments
      │  │  │                       │              │  │     ├─ 0
      │  │  │                       │              │  │     │  ├─ type: AssemblyCall
      │  │  │                       │              │  │     │  ├─ functionName: xxRound
      │  │  │                       │              │  │     │  └─ arguments
      │  │  │                       │              │  │     └─ 1
      │  │  │                       │              │  │        ├─ type: AssemblyCall
      │  │  │                       │              │  │        ├─ functionName: xx
      │  │  │                       │              │  │        └─ arguments
      │  │  │                       │              │  └─ body
      │  │  │                       │              │     ├─ type: AssemblyBlock
      │  │  │                       │              │     └─ operations
      │  │  │                       │              │        └─ 0
      │  │  │                       │              │           ├─ type: AssemblyCall
      │  │  │                       │              │           ├─ functionName: revert
      │  │  │                       │              │           └─ arguments
      │  │  │                       │              │              ├─ 0
      │  │  │                       │              │              │  ├─ type: DecimalNumber
      │  │  │                       │              │              │  └─ value: 0
      │  │  │                       │              │              └─ 1
      │  │  │                       │              │                 ├─ type: DecimalNumber
      │  │  │                       │              │                 └─ value: 0
      │  │  │                       │              ├─ 4
      │  │  │                       │              │  ├─ type: AssemblyAssignment
      │  │  │                       │              │  ├─ names
      │  │  │                       │              │  │  └─ 0
      │  │  │                       │              │  │     ├─ type: Identifier
      │  │  │                       │              │  │     └─ name: x
      │  │  │                       │              │  └─ expression
      │  │  │                       │              │     ├─ type: AssemblyCall
      │  │  │                       │              │     ├─ functionName: div
      │  │  │                       │              │     └─ arguments
      │  │  │                       │              │        ├─ 0
      │  │  │                       │              │        │  ├─ type: AssemblyCall
      │  │  │                       │              │        │  ├─ functionName: xxRound
      │  │  │                       │              │        │  └─ arguments
      │  │  │                       │              │        └─ 1
      │  │  │                       │              │           ├─ type: AssemblyCall
      │  │  │                       │              │           ├─ functionName: b
      │  │  │                       │              │           └─ arguments
      │  │  │                       │              └─ 5
      │  │  │                       │                 ├─ type: AssemblyIf
      │  │  │                       │                 ├─ condition
      │  │  │                       │                 │  ├─ type: AssemblyCall
      │  │  │                       │                 │  ├─ functionName: mod
      │  │  │                       │                 │  └─ arguments
      │  │  │                       │                 │     ├─ 0
      │  │  │                       │                 │     │  ├─ type: AssemblyCall
      │  │  │                       │                 │     │  ├─ functionName: n
      │  │  │                       │                 │     │  └─ arguments
      │  │  │                       │                 │     └─ 1
      │  │  │                       │                 │        ├─ type: DecimalNumber
      │  │  │                       │                 │        └─ value: 2
      │  │  │                       │                 └─ body
      │  │  │                       │                    ├─ type: AssemblyBlock
      │  │  │                       │                    └─ operations
      │  │  │                       │                       ├─ 0
      │  │  │                       │                       │  ├─ type: AssemblyLocalDefinition
      │  │  │                       │                       │  ├─ names
      │  │  │                       │                       │  │  └─ 0
      │  │  │                       │                       │  │     ├─ type: Identifier
      │  │  │                       │                       │  │     └─ name: zx
      │  │  │                       │                       │  └─ expression
      │  │  │                       │                       │     ├─ type: AssemblyCall
      │  │  │                       │                       │     ├─ functionName: mul
      │  │  │                       │                       │     └─ arguments
      │  │  │                       │                       │        ├─ 0
      │  │  │                       │                       │        │  ├─ type: AssemblyCall
      │  │  │                       │                       │        │  ├─ functionName: z
      │  │  │                       │                       │        │  └─ arguments
      │  │  │                       │                       │        └─ 1
      │  │  │                       │                       │           ├─ type: AssemblyCall
      │  │  │                       │                       │           ├─ functionName: x
      │  │  │                       │                       │           └─ arguments
      │  │  │                       │                       ├─ 1
      │  │  │                       │                       │  ├─ type: AssemblyIf
      │  │  │                       │                       │  ├─ condition
      │  │  │                       │                       │  │  ├─ type: AssemblyCall
      │  │  │                       │                       │  │  ├─ functionName: and
      │  │  │                       │                       │  │  └─ arguments
      │  │  │                       │                       │  │     ├─ 0
      │  │  │                       │                       │  │     │  ├─ type: AssemblyCall
      │  │  │                       │                       │  │     │  ├─ functionName: iszero
      │  │  │                       │                       │  │     │  └─ arguments
      │  │  │                       │                       │  │     │     └─ 0
      │  │  │                       │                       │  │     │        ├─ type: AssemblyCall
      │  │  │                       │                       │  │     │        ├─ functionName: iszero
      │  │  │                       │                       │  │     │        └─ arguments
      │  │  │                       │                       │  │     │           └─ 0
      │  │  │                       │                       │  │     │              ├─ type: AssemblyCall
      │  │  │                       │                       │  │     │              ├─ functionName: x
      │  │  │                       │                       │  │     │              └─ arguments
      │  │  │                       │                       │  │     └─ 1
      │  │  │                       │                       │  │        ├─ type: AssemblyCall
      │  │  │                       │                       │  │        ├─ functionName: iszero
      │  │  │                       │                       │  │        └─ arguments
      │  │  │                       │                       │  │           └─ 0
      │  │  │                       │                       │  │              ├─ type: AssemblyCall
      │  │  │                       │                       │  │              ├─ functionName: eq
      │  │  │                       │                       │  │              └─ arguments
      │  │  │                       │                       │  │                 ├─ 0
      │  │  │                       │                       │  │                 │  ├─ type: AssemblyCall
      │  │  │                       │                       │  │                 │  ├─ functionName: div
      │  │  │                       │                       │  │                 │  └─ arguments
      │  │  │                       │                       │  │                 │     ├─ 0
      │  │  │                       │                       │  │                 │     │  ├─ type: AssemblyCall
      │  │  │                       │                       │  │                 │     │  ├─ functionName: zx
      │  │  │                       │                       │  │                 │     │  └─ arguments
      │  │  │                       │                       │  │                 │     └─ 1
      │  │  │                       │                       │  │                 │        ├─ type: AssemblyCall
      │  │  │                       │                       │  │                 │        ├─ functionName: x
      │  │  │                       │                       │  │                 │        └─ arguments
      │  │  │                       │                       │  │                 └─ 1
      │  │  │                       │                       │  │                    ├─ type: AssemblyCall
      │  │  │                       │                       │  │                    ├─ functionName: z
      │  │  │                       │                       │  │                    └─ arguments
      │  │  │                       │                       │  └─ body
      │  │  │                       │                       │     ├─ type: AssemblyBlock
      │  │  │                       │                       │     └─ operations
      │  │  │                       │                       │        └─ 0
      │  │  │                       │                       │           ├─ type: AssemblyCall
      │  │  │                       │                       │           ├─ functionName: revert
      │  │  │                       │                       │           └─ arguments
      │  │  │                       │                       │              ├─ 0
      │  │  │                       │                       │              │  ├─ type: DecimalNumber
      │  │  │                       │                       │              │  └─ value: 0
      │  │  │                       │                       │              └─ 1
      │  │  │                       │                       │                 ├─ type: DecimalNumber
      │  │  │                       │                       │                 └─ value: 0
      │  │  │                       │                       ├─ 2
      │  │  │                       │                       │  ├─ type: AssemblyLocalDefinition
      │  │  │                       │                       │  ├─ names
      │  │  │                       │                       │  │  └─ 0
      │  │  │                       │                       │  │     ├─ type: Identifier
      │  │  │                       │                       │  │     └─ name: zxRound
      │  │  │                       │                       │  └─ expression
      │  │  │                       │                       │     ├─ type: AssemblyCall
      │  │  │                       │                       │     ├─ functionName: add
      │  │  │                       │                       │     └─ arguments
      │  │  │                       │                       │        ├─ 0
      │  │  │                       │                       │        │  ├─ type: AssemblyCall
      │  │  │                       │                       │        │  ├─ functionName: zx
      │  │  │                       │                       │        │  └─ arguments
      │  │  │                       │                       │        └─ 1
      │  │  │                       │                       │           ├─ type: AssemblyCall
      │  │  │                       │                       │           ├─ functionName: half
      │  │  │                       │                       │           └─ arguments
      │  │  │                       │                       ├─ 3
      │  │  │                       │                       │  ├─ type: AssemblyIf
      │  │  │                       │                       │  ├─ condition
      │  │  │                       │                       │  │  ├─ type: AssemblyCall
      │  │  │                       │                       │  │  ├─ functionName: lt
      │  │  │                       │                       │  │  └─ arguments
      │  │  │                       │                       │  │     ├─ 0
      │  │  │                       │                       │  │     │  ├─ type: AssemblyCall
      │  │  │                       │                       │  │     │  ├─ functionName: zxRound
      │  │  │                       │                       │  │     │  └─ arguments
      │  │  │                       │                       │  │     └─ 1
      │  │  │                       │                       │  │        ├─ type: AssemblyCall
      │  │  │                       │                       │  │        ├─ functionName: zx
      │  │  │                       │                       │  │        └─ arguments
      │  │  │                       │                       │  └─ body
      │  │  │                       │                       │     ├─ type: AssemblyBlock
      │  │  │                       │                       │     └─ operations
      │  │  │                       │                       │        └─ 0
      │  │  │                       │                       │           ├─ type: AssemblyCall
      │  │  │                       │                       │           ├─ functionName: revert
      │  │  │                       │                       │           └─ arguments
      │  │  │                       │                       │              ├─ 0
      │  │  │                       │                       │              │  ├─ type: DecimalNumber
      │  │  │                       │                       │              │  └─ value: 0
      │  │  │                       │                       │              └─ 1
      │  │  │                       │                       │                 ├─ type: DecimalNumber
      │  │  │                       │                       │                 └─ value: 0
      │  │  │                       │                       └─ 4
      │  │  │                       │                          ├─ type: AssemblyAssignment
      │  │  │                       │                          ├─ names
      │  │  │                       │                          │  └─ 0
      │  │  │                       │                          │     ├─ type: Identifier
      │  │  │                       │                          │     └─ name: z
      │  │  │                       │                          └─ expression
      │  │  │                       │                             ├─ type: AssemblyCall
      │  │  │                       │                             ├─ functionName: div
      │  │  │                       │                             └─ arguments
      │  │  │                       │                                ├─ 0
      │  │  │                       │                                │  ├─ type: AssemblyCall
      │  │  │                       │                                │  ├─ functionName: zxRound
      │  │  │                       │                                │  └─ arguments
      │  │  │                       │                                └─ 1
      │  │  │                       │                                   ├─ type: AssemblyCall
      │  │  │                       │                                   ├─ functionName: b
      │  │  │                       │                                   └─ arguments
      │  │  │                       └─ default: true
      │  │  ├─ visibility: internal
      │  │  ├─ modifiers
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability: pure
      │  ├─ 11
      │  │  ├─ type: StateVariableDeclaration
      │  │  ├─ variables
      │  │  │  └─ 0
      │  │  │     ├─ type: VariableDeclaration
      │  │  │     ├─ typeName
      │  │  │     │  ├─ type: ElementaryTypeName
      │  │  │     │  └─ name: uint256
      │  │  │     ├─ name: ONE
      │  │  │     ├─ expression
      │  │  │     │  ├─ type: BinaryOperation
      │  │  │     │  ├─ operator: **
      │  │  │     │  ├─ left
      │  │  │     │  │  ├─ type: NumberLiteral
      │  │  │     │  │  ├─ number: 10
      │  │  │     │  │  └─ subdenomination
      │  │  │     │  └─ right
      │  │  │     │     ├─ type: NumberLiteral
      │  │  │     │     ├─ number: 27
      │  │  │     │     └─ subdenomination
      │  │  │     ├─ visibility: default
      │  │  │     ├─ isStateVar: true
      │  │  │     ├─ isDeclaredConst: true
      │  │  │     └─ isIndexed: false
      │  │  └─ initialValue
      │  │     ├─ type: BinaryOperation
      │  │     ├─ operator: **
      │  │     ├─ left
      │  │     │  ├─ type: NumberLiteral
      │  │     │  ├─ number: 10
      │  │     │  └─ subdenomination
      │  │     └─ right
      │  │        ├─ type: NumberLiteral
      │  │        ├─ number: 27
      │  │        └─ subdenomination
      │  ├─ 12
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: add
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: uint
      │  │  │     │  ├─ name: x
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 1
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: y
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: z
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: BinaryOperation
      │  │  │     │     ├─ operator: =
      │  │  │     │     ├─ left
      │  │  │     │     │  ├─ type: Identifier
      │  │  │     │     │  └─ name: z
      │  │  │     │     └─ right
      │  │  │     │        ├─ type: BinaryOperation
      │  │  │     │        ├─ operator: +
      │  │  │     │        ├─ left
      │  │  │     │        │  ├─ type: Identifier
      │  │  │     │        │  └─ name: x
      │  │  │     │        └─ right
      │  │  │     │           ├─ type: Identifier
      │  │  │     │           └─ name: y
      │  │  │     └─ 1
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: FunctionCall
      │  │  │           ├─ expression
      │  │  │           │  ├─ type: Identifier
      │  │  │           │  └─ name: require
      │  │  │           ├─ arguments
      │  │  │           │  └─ 0
      │  │  │           │     ├─ type: BinaryOperation
      │  │  │           │     ├─ operator: >=
      │  │  │           │     ├─ left
      │  │  │           │     │  ├─ type: Identifier
      │  │  │           │     │  └─ name: z
      │  │  │           │     └─ right
      │  │  │           │        ├─ type: Identifier
      │  │  │           │        └─ name: x
      │  │  │           └─ names
      │  │  ├─ visibility: internal
      │  │  ├─ modifiers
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability: pure
      │  ├─ 13
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: diff
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: uint
      │  │  │     │  ├─ name: x
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 1
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: y
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: int
      │  │  │        ├─ name: z
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: BinaryOperation
      │  │  │     │     ├─ operator: =
      │  │  │     │     ├─ left
      │  │  │     │     │  ├─ type: Identifier
      │  │  │     │     │  └─ name: z
      │  │  │     │     └─ right
      │  │  │     │        ├─ type: BinaryOperation
      │  │  │     │        ├─ operator: -
      │  │  │     │        ├─ left
      │  │  │     │        │  ├─ type: FunctionCall
      │  │  │     │        │  ├─ expression
      │  │  │     │        │  │  ├─ type: ElementaryTypeNameExpression
      │  │  │     │        │  │  └─ typeName
      │  │  │     │        │  │     ├─ type: ElementaryTypeName
      │  │  │     │        │  │     └─ name: int
      │  │  │     │        │  ├─ arguments
      │  │  │     │        │  │  └─ 0
      │  │  │     │        │  │     ├─ type: Identifier
      │  │  │     │        │  │     └─ name: x
      │  │  │     │        │  └─ names
      │  │  │     │        └─ right
      │  │  │     │           ├─ type: FunctionCall
      │  │  │     │           ├─ expression
      │  │  │     │           │  ├─ type: ElementaryTypeNameExpression
      │  │  │     │           │  └─ typeName
      │  │  │     │           │     ├─ type: ElementaryTypeName
      │  │  │     │           │     └─ name: int
      │  │  │     │           ├─ arguments
      │  │  │     │           │  └─ 0
      │  │  │     │           │     ├─ type: Identifier
      │  │  │     │           │     └─ name: y
      │  │  │     │           └─ names
      │  │  │     └─ 1
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: FunctionCall
      │  │  │           ├─ expression
      │  │  │           │  ├─ type: Identifier
      │  │  │           │  └─ name: require
      │  │  │           ├─ arguments
      │  │  │           │  └─ 0
      │  │  │           │     ├─ type: BinaryOperation
      │  │  │           │     ├─ operator: &&
      │  │  │           │     ├─ left
      │  │  │           │     │  ├─ type: BinaryOperation
      │  │  │           │     │  ├─ operator: >=
      │  │  │           │     │  ├─ left
      │  │  │           │     │  │  ├─ type: FunctionCall
      │  │  │           │     │  │  ├─ expression
      │  │  │           │     │  │  │  ├─ type: ElementaryTypeNameExpression
      │  │  │           │     │  │  │  └─ typeName
      │  │  │           │     │  │  │     ├─ type: ElementaryTypeName
      │  │  │           │     │  │  │     └─ name: int
      │  │  │           │     │  │  ├─ arguments
      │  │  │           │     │  │  │  └─ 0
      │  │  │           │     │  │  │     ├─ type: Identifier
      │  │  │           │     │  │  │     └─ name: x
      │  │  │           │     │  │  └─ names
      │  │  │           │     │  └─ right
      │  │  │           │     │     ├─ type: NumberLiteral
      │  │  │           │     │     ├─ number: 0
      │  │  │           │     │     └─ subdenomination
      │  │  │           │     └─ right
      │  │  │           │        ├─ type: BinaryOperation
      │  │  │           │        ├─ operator: >=
      │  │  │           │        ├─ left
      │  │  │           │        │  ├─ type: FunctionCall
      │  │  │           │        │  ├─ expression
      │  │  │           │        │  │  ├─ type: ElementaryTypeNameExpression
      │  │  │           │        │  │  └─ typeName
      │  │  │           │        │  │     ├─ type: ElementaryTypeName
      │  │  │           │        │  │     └─ name: int
      │  │  │           │        │  ├─ arguments
      │  │  │           │        │  │  └─ 0
      │  │  │           │        │  │     ├─ type: Identifier
      │  │  │           │        │  │     └─ name: y
      │  │  │           │        │  └─ names
      │  │  │           │        └─ right
      │  │  │           │           ├─ type: NumberLiteral
      │  │  │           │           ├─ number: 0
      │  │  │           │           └─ subdenomination
      │  │  │           └─ names
      │  │  ├─ visibility: internal
      │  │  ├─ modifiers
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability: pure
      │  ├─ 14
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: rmul
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: uint
      │  │  │     │  ├─ name: x
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 1
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: y
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: z
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: BinaryOperation
      │  │  │     │     ├─ operator: =
      │  │  │     │     ├─ left
      │  │  │     │     │  ├─ type: Identifier
      │  │  │     │     │  └─ name: z
      │  │  │     │     └─ right
      │  │  │     │        ├─ type: BinaryOperation
      │  │  │     │        ├─ operator: *
      │  │  │     │        ├─ left
      │  │  │     │        │  ├─ type: Identifier
      │  │  │     │        │  └─ name: x
      │  │  │     │        └─ right
      │  │  │     │           ├─ type: Identifier
      │  │  │     │           └─ name: y
      │  │  │     ├─ 1
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: FunctionCall
      │  │  │     │     ├─ expression
      │  │  │     │     │  ├─ type: Identifier
      │  │  │     │     │  └─ name: require
      │  │  │     │     ├─ arguments
      │  │  │     │     │  └─ 0
      │  │  │     │     │     ├─ type: BinaryOperation
      │  │  │     │     │     ├─ operator: ||
      │  │  │     │     │     ├─ left
      │  │  │     │     │     │  ├─ type: BinaryOperation
      │  │  │     │     │     │  ├─ operator: ==
      │  │  │     │     │     │  ├─ left
      │  │  │     │     │     │  │  ├─ type: Identifier
      │  │  │     │     │     │  │  └─ name: y
      │  │  │     │     │     │  └─ right
      │  │  │     │     │     │     ├─ type: NumberLiteral
      │  │  │     │     │     │     ├─ number: 0
      │  │  │     │     │     │     └─ subdenomination
      │  │  │     │     │     └─ right
      │  │  │     │     │        ├─ type: BinaryOperation
      │  │  │     │     │        ├─ operator: ==
      │  │  │     │     │        ├─ left
      │  │  │     │     │        │  ├─ type: BinaryOperation
      │  │  │     │     │        │  ├─ operator: /
      │  │  │     │     │        │  ├─ left
      │  │  │     │     │        │  │  ├─ type: Identifier
      │  │  │     │     │        │  │  └─ name: z
      │  │  │     │     │        │  └─ right
      │  │  │     │     │        │     ├─ type: Identifier
      │  │  │     │     │        │     └─ name: y
      │  │  │     │     │        └─ right
      │  │  │     │     │           ├─ type: Identifier
      │  │  │     │     │           └─ name: x
      │  │  │     │     └─ names
      │  │  │     └─ 2
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: BinaryOperation
      │  │  │           ├─ operator: =
      │  │  │           ├─ left
      │  │  │           │  ├─ type: Identifier
      │  │  │           │  └─ name: z
      │  │  │           └─ right
      │  │  │              ├─ type: BinaryOperation
      │  │  │              ├─ operator: /
      │  │  │              ├─ left
      │  │  │              │  ├─ type: Identifier
      │  │  │              │  └─ name: z
      │  │  │              └─ right
      │  │  │                 ├─ type: Identifier
      │  │  │                 └─ name: ONE
      │  │  ├─ visibility: internal
      │  │  ├─ modifiers
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability: pure
      │  ├─ 15
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: init
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     └─ 0
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: bytes32
      │  │  │        ├─ name: ilk
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: VariableDeclarationStatement
      │  │  │     │  ├─ variables
      │  │  │     │  │  └─ 0
      │  │  │     │  │     ├─ type: VariableDeclaration
      │  │  │     │  │     ├─ typeName
      │  │  │     │  │     │  ├─ type: UserDefinedTypeName
      │  │  │     │  │     │  └─ namePath: Ilk
      │  │  │     │  │     ├─ name: i
      │  │  │     │  │     ├─ storageLocation: storage
      │  │  │     │  │     ├─ isStateVar: false
      │  │  │     │  │     └─ isIndexed: false
      │  │  │     │  └─ initialValue
      │  │  │     │     ├─ type: IndexAccess
      │  │  │     │     ├─ base
      │  │  │     │     │  ├─ type: Identifier
      │  │  │     │     │  └─ name: ilks
      │  │  │     │     └─ index
      │  │  │     │        ├─ type: Identifier
      │  │  │     │        └─ name: ilk
      │  │  │     ├─ 1
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: FunctionCall
      │  │  │     │     ├─ expression
      │  │  │     │     │  ├─ type: Identifier
      │  │  │     │     │  └─ name: require
      │  │  │     │     ├─ arguments
      │  │  │     │     │  └─ 0
      │  │  │     │     │     ├─ type: BinaryOperation
      │  │  │     │     │     ├─ operator: ==
      │  │  │     │     │     ├─ left
      │  │  │     │     │     │  ├─ type: MemberAccess
      │  │  │     │     │     │  ├─ expression
      │  │  │     │     │     │  │  ├─ type: Identifier
      │  │  │     │     │     │  │  └─ name: i
      │  │  │     │     │     │  └─ memberName: duty
      │  │  │     │     │     └─ right
      │  │  │     │     │        ├─ type: NumberLiteral
      │  │  │     │     │        ├─ number: 0
      │  │  │     │     │        └─ subdenomination
      │  │  │     │     └─ names
      │  │  │     ├─ 2
      │  │  │     │  ├─ type: ExpressionStatement
      │  │  │     │  └─ expression
      │  │  │     │     ├─ type: BinaryOperation
      │  │  │     │     ├─ operator: =
      │  │  │     │     ├─ left
      │  │  │     │     │  ├─ type: MemberAccess
      │  │  │     │     │  ├─ expression
      │  │  │     │     │  │  ├─ type: Identifier
      │  │  │     │     │  │  └─ name: i
      │  │  │     │     │  └─ memberName: duty
      │  │  │     │     └─ right
      │  │  │     │        ├─ type: Identifier
      │  │  │     │        └─ name: ONE
      │  │  │     └─ 3
      │  │  │        ├─ type: ExpressionStatement
      │  │  │        └─ expression
      │  │  │           ├─ type: BinaryOperation
      │  │  │           ├─ operator: =
      │  │  │           ├─ left
      │  │  │           │  ├─ type: MemberAccess
      │  │  │           │  ├─ expression
      │  │  │           │  │  ├─ type: Identifier
      │  │  │           │  │  └─ name: i
      │  │  │           │  └─ memberName: rho
      │  │  │           └─ right
      │  │  │              ├─ type: Identifier
      │  │  │              └─ name: now
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  │  ├─ 0
      │  │  │  │  ├─ type: ModifierInvocation
      │  │  │  │  ├─ name: note
      │  │  │  │  └─ arguments
      │  │  │  └─ 1
      │  │  │     ├─ type: ModifierInvocation
      │  │  │     ├─ name: auth
      │  │  │     └─ arguments
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability
      │  ├─ 16
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: file
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: bytes32
      │  │  │     │  ├─ name: ilk
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     ├─ 1
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: bytes32
      │  │  │     │  ├─ name: what
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 2
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: data
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     └─ 0
      │  │  │        ├─ type: IfStatement
      │  │  │        ├─ condition
      │  │  │        │  ├─ type: BinaryOperation
      │  │  │        │  ├─ operator: ==
      │  │  │        │  ├─ left
      │  │  │        │  │  ├─ type: Identifier
      │  │  │        │  │  └─ name: what
      │  │  │        │  └─ right
      │  │  │        │     ├─ type: StringLiteral
      │  │  │        │     └─ value: duty
      │  │  │        ├─ trueBody
      │  │  │        │  ├─ type: ExpressionStatement
      │  │  │        │  └─ expression
      │  │  │        │     ├─ type: BinaryOperation
      │  │  │        │     ├─ operator: =
      │  │  │        │     ├─ left
      │  │  │        │     │  ├─ type: MemberAccess
      │  │  │        │     │  ├─ expression
      │  │  │        │     │  │  ├─ type: IndexAccess
      │  │  │        │     │  │  ├─ base
      │  │  │        │     │  │  │  ├─ type: Identifier
      │  │  │        │     │  │  │  └─ name: ilks
      │  │  │        │     │  │  └─ index
      │  │  │        │     │  │     ├─ type: Identifier
      │  │  │        │     │  │     └─ name: ilk
      │  │  │        │     │  └─ memberName: duty
      │  │  │        │     └─ right
      │  │  │        │        ├─ type: Identifier
      │  │  │        │        └─ name: data
      │  │  │        └─ falseBody
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  │  ├─ 0
      │  │  │  │  ├─ type: ModifierInvocation
      │  │  │  │  ├─ name: note
      │  │  │  │  └─ arguments
      │  │  │  └─ 1
      │  │  │     ├─ type: ModifierInvocation
      │  │  │     ├─ name: auth
      │  │  │     └─ arguments
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability
      │  ├─ 17
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: file
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: bytes32
      │  │  │     │  ├─ name: what
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 1
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: uint
      │  │  │        ├─ name: data
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     └─ 0
      │  │  │        ├─ type: IfStatement
      │  │  │        ├─ condition
      │  │  │        │  ├─ type: BinaryOperation
      │  │  │        │  ├─ operator: ==
      │  │  │        │  ├─ left
      │  │  │        │  │  ├─ type: Identifier
      │  │  │        │  │  └─ name: what
      │  │  │        │  └─ right
      │  │  │        │     ├─ type: StringLiteral
      │  │  │        │     └─ value: base
      │  │  │        ├─ trueBody
      │  │  │        │  ├─ type: ExpressionStatement
      │  │  │        │  └─ expression
      │  │  │        │     ├─ type: BinaryOperation
      │  │  │        │     ├─ operator: =
      │  │  │        │     ├─ left
      │  │  │        │     │  ├─ type: Identifier
      │  │  │        │     │  └─ name: base
      │  │  │        │     └─ right
      │  │  │        │        ├─ type: Identifier
      │  │  │        │        └─ name: data
      │  │  │        └─ falseBody
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  │  ├─ 0
      │  │  │  │  ├─ type: ModifierInvocation
      │  │  │  │  ├─ name: note
      │  │  │  │  └─ arguments
      │  │  │  └─ 1
      │  │  │     ├─ type: ModifierInvocation
      │  │  │     ├─ name: auth
      │  │  │     └─ arguments
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability
      │  ├─ 18
      │  │  ├─ type: FunctionDefinition
      │  │  ├─ name: file
      │  │  ├─ parameters
      │  │  │  ├─ type: ParameterList
      │  │  │  └─ parameters
      │  │  │     ├─ 0
      │  │  │     │  ├─ type: Parameter
      │  │  │     │  ├─ typeName
      │  │  │     │  │  ├─ type: ElementaryTypeName
      │  │  │     │  │  └─ name: bytes32
      │  │  │     │  ├─ name: what
      │  │  │     │  ├─ storageLocation
      │  │  │     │  ├─ isStateVar: false
      │  │  │     │  └─ isIndexed: false
      │  │  │     └─ 1
      │  │  │        ├─ type: Parameter
      │  │  │        ├─ typeName
      │  │  │        │  ├─ type: ElementaryTypeName
      │  │  │        │  └─ name: address
      │  │  │        ├─ name: data
      │  │  │        ├─ storageLocation
      │  │  │        ├─ isStateVar: false
      │  │  │        └─ isIndexed: false
      │  │  ├─ returnParameters
      │  │  ├─ body
      │  │  │  ├─ type: Block
      │  │  │  └─ statements
      │  │  │     └─ 0
      │  │  │        ├─ type: IfStatement
      │  │  │        ├─ condition
      │  │  │        │  ├─ type: BinaryOperation
      │  │  │        │  ├─ operator: ==
      │  │  │        │  ├─ left
      │  │  │        │  │  ├─ type: Identifier
      │  │  │        │  │  └─ name: what
      │  │  │        │  └─ right
      │  │  │        │     ├─ type: StringLiteral
      │  │  │        │     └─ value: vow
      │  │  │        ├─ trueBody
      │  │  │        │  ├─ type: ExpressionStatement
      │  │  │        │  └─ expression
      │  │  │        │     ├─ type: BinaryOperation
      │  │  │        │     ├─ operator: =
      │  │  │        │     ├─ left
      │  │  │        │     │  ├─ type: Identifier
      │  │  │        │     │  └─ name: vow
      │  │  │        │     └─ right
      │  │  │        │        ├─ type: Identifier
      │  │  │        │        └─ name: data
      │  │  │        └─ falseBody
      │  │  ├─ visibility: public
      │  │  ├─ modifiers
      │  │  │  ├─ 0
      │  │  │  │  ├─ type: ModifierInvocation
      │  │  │  │  ├─ name: note
      │  │  │  │  └─ arguments
      │  │  │  └─ 1
      │  │  │     ├─ type: ModifierInvocation
      │  │  │     ├─ name: auth
      │  │  │     └─ arguments
      │  │  ├─ isConstructor: false
      │  │  └─ stateMutability
      │  └─ 19
      │     ├─ type: FunctionDefinition
      │     ├─ name: drip
      │     ├─ parameters
      │     │  ├─ type: ParameterList
      │     │  └─ parameters
      │     │     └─ 0
      │     │        ├─ type: Parameter
      │     │        ├─ typeName
      │     │        │  ├─ type: ElementaryTypeName
      │     │        │  └─ name: bytes32
      │     │        ├─ name: ilk
      │     │        ├─ storageLocation
      │     │        ├─ isStateVar: false
      │     │        └─ isIndexed: false
      │     ├─ returnParameters
      │     ├─ body
      │     │  ├─ type: Block
      │     │  └─ statements
      │     │     ├─ 0
      │     │     │  ├─ type: ExpressionStatement
      │     │     │  └─ expression
      │     │     │     ├─ type: FunctionCall
      │     │     │     ├─ expression
      │     │     │     │  ├─ type: Identifier
      │     │     │     │  └─ name: require
      │     │     │     ├─ arguments
      │     │     │     │  └─ 0
      │     │     │     │     ├─ type: BinaryOperation
      │     │     │     │     ├─ operator: >=
      │     │     │     │     ├─ left
      │     │     │     │     │  ├─ type: Identifier
      │     │     │     │     │  └─ name: now
      │     │     │     │     └─ right
      │     │     │     │        ├─ type: MemberAccess
      │     │     │     │        ├─ expression
      │     │     │     │        │  ├─ type: IndexAccess
      │     │     │     │        │  ├─ base
      │     │     │     │        │  │  ├─ type: Identifier
      │     │     │     │        │  │  └─ name: ilks
      │     │     │     │        │  └─ index
      │     │     │     │        │     ├─ type: Identifier
      │     │     │     │        │     └─ name: ilk
      │     │     │     │        └─ memberName: rho
      │     │     │     └─ names
      │     │     ├─ 1
      │     │     │  ├─ type: VariableDeclarationStatement
      │     │     │  ├─ variables
      │     │     │  │  └─ 0
      │     │     │  │     ├─ type: VariableDeclaration
      │     │     │  │     ├─ typeName
      │     │     │  │     │  ├─ type: UserDefinedTypeName
      │     │     │  │     │  └─ namePath: VatLike.Ilk
      │     │     │  │     ├─ name: i
      │     │     │  │     ├─ storageLocation: memory
      │     │     │  │     ├─ isStateVar: false
      │     │     │  │     └─ isIndexed: false
      │     │     │  └─ initialValue
      │     │     │     ├─ type: FunctionCall
      │     │     │     ├─ expression
      │     │     │     │  ├─ type: MemberAccess
      │     │     │     │  ├─ expression
      │     │     │     │  │  ├─ type: Identifier
      │     │     │     │  │  └─ name: vat
      │     │     │     │  └─ memberName: ilks
      │     │     │     ├─ arguments
      │     │     │     │  └─ 0
      │     │     │     │     ├─ type: Identifier
      │     │     │     │     └─ name: ilk
      │     │     │     └─ names
      │     │     ├─ 2
      │     │     │  ├─ type: ExpressionStatement
      │     │     │  └─ expression
      │     │     │     ├─ type: FunctionCall
      │     │     │     ├─ expression
      │     │     │     │  ├─ type: MemberAccess
      │     │     │     │  ├─ expression
      │     │     │     │  │  ├─ type: Identifier
      │     │     │     │  │  └─ name: vat
      │     │     │     │  └─ memberName: fold
      │     │     │     ├─ arguments
      │     │     │     │  ├─ 0
      │     │     │     │  │  ├─ type: Identifier
      │     │     │     │  │  └─ name: ilk
      │     │     │     │  ├─ 1
      │     │     │     │  │  ├─ type: Identifier
      │     │     │     │  │  └─ name: vow
      │     │     │     │  └─ 2
      │     │     │     │     ├─ type: FunctionCall
      │     │     │     │     ├─ expression
      │     │     │     │     │  ├─ type: Identifier
      │     │     │     │     │  └─ name: diff
      │     │     │     │     ├─ arguments
      │     │     │     │     │  ├─ 0
      │     │     │     │     │  │  ├─ type: FunctionCall
      │     │     │     │     │  │  ├─ expression
      │     │     │     │     │  │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  └─ name: rmul
      │     │     │     │     │  │  ├─ arguments
      │     │     │     │     │  │  │  ├─ 0
      │     │     │     │     │  │  │  │  ├─ type: FunctionCall
      │     │     │     │     │  │  │  │  ├─ expression
      │     │     │     │     │  │  │  │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  └─ name: rpow
      │     │     │     │     │  │  │  │  ├─ arguments
      │     │     │     │     │  │  │  │  │  ├─ 0
      │     │     │     │     │  │  │  │  │  │  ├─ type: FunctionCall
      │     │     │     │     │  │  │  │  │  │  ├─ expression
      │     │     │     │     │  │  │  │  │  │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │  │  └─ name: add
      │     │     │     │     │  │  │  │  │  │  ├─ arguments
      │     │     │     │     │  │  │  │  │  │  │  ├─ 0
      │     │     │     │     │  │  │  │  │  │  │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │  │  │  └─ name: base
      │     │     │     │     │  │  │  │  │  │  │  └─ 1
      │     │     │     │     │  │  │  │  │  │  │     ├─ type: MemberAccess
      │     │     │     │     │  │  │  │  │  │  │     ├─ expression
      │     │     │     │     │  │  │  │  │  │  │     │  ├─ type: IndexAccess
      │     │     │     │     │  │  │  │  │  │  │     │  ├─ base
      │     │     │     │     │  │  │  │  │  │  │     │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │  │     │  │  └─ name: ilks
      │     │     │     │     │  │  │  │  │  │  │     │  └─ index
      │     │     │     │     │  │  │  │  │  │  │     │     ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │  │     │     └─ name: ilk
      │     │     │     │     │  │  │  │  │  │  │     └─ memberName: duty
      │     │     │     │     │  │  │  │  │  │  └─ names
      │     │     │     │     │  │  │  │  │  ├─ 1
      │     │     │     │     │  │  │  │  │  │  ├─ type: BinaryOperation
      │     │     │     │     │  │  │  │  │  │  ├─ operator: -
      │     │     │     │     │  │  │  │  │  │  ├─ left
      │     │     │     │     │  │  │  │  │  │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │  │  └─ name: now
      │     │     │     │     │  │  │  │  │  │  └─ right
      │     │     │     │     │  │  │  │  │  │     ├─ type: MemberAccess
      │     │     │     │     │  │  │  │  │  │     ├─ expression
      │     │     │     │     │  │  │  │  │  │     │  ├─ type: IndexAccess
      │     │     │     │     │  │  │  │  │  │     │  ├─ base
      │     │     │     │     │  │  │  │  │  │     │  │  ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │     │  │  └─ name: ilks
      │     │     │     │     │  │  │  │  │  │     │  └─ index
      │     │     │     │     │  │  │  │  │  │     │     ├─ type: Identifier
      │     │     │     │     │  │  │  │  │  │     │     └─ name: ilk
      │     │     │     │     │  │  │  │  │  │     └─ memberName: rho
      │     │     │     │     │  │  │  │  │  └─ 2
      │     │     │     │     │  │  │  │  │     ├─ type: Identifier
      │     │     │     │     │  │  │  │  │     └─ name: ONE
      │     │     │     │     │  │  │  │  └─ names
      │     │     │     │     │  │  │  └─ 1
      │     │     │     │     │  │  │     ├─ type: MemberAccess
      │     │     │     │     │  │  │     ├─ expression
      │     │     │     │     │  │  │     │  ├─ type: Identifier
      │     │     │     │     │  │  │     │  └─ name: i
      │     │     │     │     │  │  │     └─ memberName: rate
      │     │     │     │     │  │  └─ names
      │     │     │     │     │  └─ 1
      │     │     │     │     │     ├─ type: MemberAccess
      │     │     │     │     │     ├─ expression
      │     │     │     │     │     │  ├─ type: Identifier
      │     │     │     │     │     │  └─ name: i
      │     │     │     │     │     └─ memberName: rate
      │     │     │     │     └─ names
      │     │     │     └─ names
      │     │     └─ 3
      │     │        ├─ type: ExpressionStatement
      │     │        └─ expression
      │     │           ├─ type: BinaryOperation
      │     │           ├─ operator: =
      │     │           ├─ left
      │     │           │  ├─ type: MemberAccess
      │     │           │  ├─ expression
      │     │           │  │  ├─ type: IndexAccess
      │     │           │  │  ├─ base
      │     │           │  │  │  ├─ type: Identifier
      │     │           │  │  │  └─ name: ilks
      │     │           │  │  └─ index
      │     │           │  │     ├─ type: Identifier
      │     │           │  │     └─ name: ilk
      │     │           │  └─ memberName: rho
      │     │           └─ right
      │     │              ├─ type: Identifier
      │     │              └─ name: now
      │     ├─ visibility: public
      │     ├─ modifiers
      │     │  └─ 0
      │     │     ├─ type: ModifierInvocation
      │     │     ├─ name: note
      │     │     └─ arguments
      │     ├─ isConstructor: false
      │     └─ stateMutability
      └─ kind: contract

